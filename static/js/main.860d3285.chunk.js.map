{"version":3,"sources":["components/Wrapper/Wrapper.styles.js","components/Form/Form.styles.js","redux/actions.js","components/Form/Form.js","components/SectionTitle/SectionTitle.styles.js","components/SectionTitle/SectionTitle.js","components/Contacts/ContactsList.styles.js","components/Contacts/ContactsList.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/App/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","FormLabel","label","FormInput","input","FormStyle","form","BtnSubmit","button","formSubmitHandler","createAction","data","payload","name","number","onDeleteContact","filterChange","Form","state","InputChange","evt","setState","currentTarget","value","FormSubmit","preventDefault","props","onSubmit","this","type","onChange","pattern","title","required","size","color","style","marginLeft","Component","connect","dispatch","actions","TitleSection","h2","SectionTitle","children","ItemContact","li","BtnDelete","contactList","allContacts","filter","filterLowerCase","toLowerCase","contact","includes","filterContacts","contacts","onDelete","idContact","map","marginRight","onClick","id","FilterLabel","FilterInput","onFilterChange","App","createReducer","_","testDataContacts","find","alert","newContact","uuidv4","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.860d3285.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 650px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 30px 20px;\n\n  background-color: var(--bg-color);\n  border-radius: 20px;\n  box-shadow: 1px 1px 16px -2px var(--main-color);\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 15px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FormInput = styled.input`\n  border-radius: 6px;\n  height: 26px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 250px;\n  padding: 20px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 100px;\n  padding: 6px 15px;\n  margin-top: 10px;\n  margin-right: auto;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","// import types from './types'\nimport { createAction } from \"@reduxjs/toolkit\";\n\n// const formSubmitHandler = (data) => ({\n//     type: types.ADD,\n//     payload: {\n//         name: data.name,\n//         number: data.number,\n//     },\n// })\n\n// const onDeleteContact = (id) => ({\n//     type: types.DELETE,\n//     payload: id,\n// })\n\n// const filterChange = (value) => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// })\n\nexport const formSubmitHandler = createAction(\"formSubmitHandler\", data => ({\n  payload: {\n    name: data.name,\n    number: data.number,\n  },\n}));\n\nexport const onDeleteContact = createAction(\"onDeleteContact\");\nexport const filterChange = createAction(\"filterChange\");\n\n// export default { formSubmitHandler, onDeleteContact, filterChange }\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormLabel, FormInput, FormStyle, BtnSubmit } from \"./Form.styles\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\n// import actions from '../../redux/actions'\nimport * as actions from \"../../redux/actions\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  InputChange = evt => {\n    this.setState({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    });\n  };\n\n  FormSubmit = evt => {\n    evt.preventDefault();\n    // console.log(evt);\n    // console.log(this.state);\n\n    this.props.onSubmit(this.state);\n\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <FormStyle onSubmit={this.FormSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.InputChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Fhone number\n          <FormInput\n            type=\"tel\"\n            value={this.state.number}\n            onChange={this.InputChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </FormLabel>\n\n        <BtnSubmit type=\"submit\">\n          ADD CONTACT{\" \"}\n          <MdPersonAdd size={26} color=\"#8919FA\" style={{ marginLeft: 20 }} />\n        </BtnSubmit>\n      </FormStyle>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(actions.formSubmitHandler(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import styled from \"@emotion/styled\";\n\nexport const TitleSection = styled.h2`\n  font-weight: bold;\n  padding: 20px 0px;\n`;\n","import { TitleSection } from \"./SectionTitle.styles\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <section>\n      <TitleSection>{title}</TitleSection>\n      {children}\n    </section>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default SectionTitle;\n","import styled from \"@emotion/styled\";\n\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 80px;\n  padding: 3px 18px;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { ItemContact, BtnDelete } from \"./ContactsList.styles\";\nimport { MdDelete } from \"react-icons/md\";\nimport { RiUser3Line } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\n\nconst ContactsList = ({ contactList, onDelete }) => {\n  return (\n    <ul>\n      {contactList.map(contact => (\n        <ItemContact key={contact.id}>\n          <div>\n            <RiUser3Line size={14} style={{ marginRight: 10 }} />\n            {contact.name}: {contact.number}\n          </div>\n          <BtnDelete type=\"submit\" onClick={() => onDelete(contact.id)}>\n            delete\n            <MdDelete size={16} color=\"#8919FA\" style={{ marginLeft: 10 }} />\n          </BtnDelete>\n        </ItemContact>\n      ))}\n    </ul>\n  );\n};\n\nconst filterContacts = (allContacts, filter) => {\n  const filterLowerCase = filter.toLowerCase();\n\n  const contactsFilter = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterLowerCase),\n  );\n\n  return contactsFilter;\n};\n\nconst mapStateToProps = state => {\n  const contactsFilter = filterContacts(state.contacts, state.filter);\n\n  return { contactList: contactsFilter };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: idContact => dispatch(actions.onDeleteContact(idContact)),\n});\n\nContactsList.propTypes = {\n  contactList: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import styled from \"@emotion/styled\";\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  width: 200px;\n  margin-bottom: 20px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FilterInput = styled.input`\n  border-radius: 6px;\n  height: 24px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { FilterLabel, FilterInput } from \"./Filter.styles\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\n\nconst Filter = ({ filter, onFilterChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: evt =>\n    dispatch(actions.filterChange(evt.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// import { Component } from \"react\";\nimport { Wrapper } from \"../Wrapper/Wrapper.styles\";\nimport Form from \"../Form\";\nimport SectionTitle from \"../SectionTitle\";\nimport ContactsList from \"../Contacts\";\nimport Filter from \"../Filter\";\n// import { connect } from 'react-redux';\n// import *as actions from '../../redux/actions'\n\nfunction App() {\n  return (\n    <Wrapper>\n      <SectionTitle title=\"Phonebook\">\n        <Form />\n      </SectionTitle>\n\n      <SectionTitle title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </SectionTitle>\n    </Wrapper>\n  );\n}\n\n// const mapStateToProps = state => state;\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     formSubmitHandler: (dataSubmit) => dispatch(actions.formSubmitHandler(dataSubmit)),\n//     filterChange: (evt) => dispatch(actions.filterChange(evt)),\n//     onDeleteContact: (id) => dispatch(actions.onDeleteContact(id)),\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\nexport default App;\n","import { combineReducers } from \"redux\";\n// import types from './types'\nimport { v4 as uuidv4 } from \"uuid\";\nimport testDataContacts from \"../components/data/data.json\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\n\nconst filter = createReducer(\"\", {\n  [actions.filterChange]: (_, { payload }) => payload,\n});\n\nconst contacts = createReducer([...testDataContacts], {\n  [actions.formSubmitHandler]: (state, { payload }) => {\n    if (\n      state.find(\n        contact => payload.name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: payload.name,\n      number: payload.number,\n    };\n\n    return [...state, newContact];\n  },\n\n  [actions.onDeleteContact]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\n// const contacts = (state = [...testDataContacts], { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             if (state.find(contact => payload.name.toLowerCase() === contact.name.toLowerCase(),)) {\n//                 alert(`${payload.name} is already in contacts`);\n//                 return state;\n//             }\n\n//             const newContact = {\n//                 id: uuidv4(),\n//                 name: payload.name,\n//                 number: payload.number,\n//             };\n\n//             return [ ...state, newContact ];\n\n//         case types.DELETE:\n//             return (state.filter(contact => contact.id !== payload))\n\n//         default:\n//             return state;\n//     };\n// };\n\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.CHANGE_FILTER:\n//             return payload;\n\n//         default:\n//             return state;\n//     };\n// };\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","// import { createStore, combineReducers } from 'redux'\n// import { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from \"./reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\n// const rootReducer = combineReducers({\n//     fhonebook: reducer,\n// })\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\n// --------localStorage\n// const rootReducer = combineReducers({\n//     fhonebook: persistReducer(persistConfig, reducer),\n//     },\n// )\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// ----------------------------\n\nexport const store = configureStore({\n  reducer: persistReducer(persistConfig, reducer),\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n// export default { store};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}